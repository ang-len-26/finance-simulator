# Generated by Django 5.2 on 2025-08-08 21:47

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('transactions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GoalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ej: Fondo de Emergencia', max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('savings', 'Ahorro'), ('expense_reduction', 'Reducir Gastos'), ('income_increase', 'Aumentar Ingresos'), ('debt_payment', 'Pagar Deuda'), ('emergency_fund', 'Fondo de Emergencia'), ('investment', 'Inversión'), ('purchase', 'Compra Específica'), ('vacation', 'Vacaciones'), ('education', 'Educación'), ('retirement', 'Jubilación'), ('other', 'Otro')], max_length=20)),
                ('suggested_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Monto sugerido (puede ser calculado dinámicamente)', max_digits=15, null=True)),
                ('suggested_timeframe_months', models.PositiveIntegerField(help_text='Plazo sugerido en meses')),
                ('icon', models.CharField(default='target', max_length=50)),
                ('color', models.CharField(default='#3b82f6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('tips', models.JSONField(blank=True, default=list, help_text="Lista de consejos: ['Ahorra automáticamente', 'Revisa mensualmente']")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FinancialGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: Ahorrar para auto nuevo', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada de la meta')),
                ('goal_type', models.CharField(choices=[('savings', 'Ahorro'), ('expense_reduction', 'Reducir Gastos'), ('income_increase', 'Aumentar Ingresos'), ('debt_payment', 'Pagar Deuda'), ('emergency_fund', 'Fondo de Emergencia'), ('investment', 'Inversión'), ('purchase', 'Compra Específica'), ('vacation', 'Vacaciones'), ('education', 'Educación'), ('retirement', 'Jubilación'), ('other', 'Otro')], default='savings', max_length=20)),
                ('target_amount', models.DecimalField(decimal_places=2, help_text='Monto objetivo a alcanzar', max_digits=15)),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monto actual ahorrado/progreso', max_digits=15)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('target_date', models.DateField(help_text='Fecha límite para completar la meta')),
                ('monthly_target', models.DecimalField(blank=True, decimal_places=2, help_text='Meta mensual recomendada para llegar al objetivo', max_digits=12, null=True)),
                ('auto_contribution', models.DecimalField(blank=True, decimal_places=2, help_text='Contribución automática mensual', max_digits=12, null=True)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('paused', 'Pausada'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('overdue', 'Vencida')], default='active', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=10)),
                ('is_public', models.BooleanField(default=False, help_text='Visible para otros usuarios')),
                ('icon', models.CharField(default='target', help_text='Ícono lucide-react', max_length=50)),
                ('color', models.CharField(default='#3b82f6', help_text='Color hexadecimal', max_length=7)),
                ('enable_reminders', models.BooleanField(default=True)),
                ('reminder_frequency', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual')], default='weekly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('associated_account', models.ForeignKey(blank=True, help_text='Cuenta donde se guarda el dinero para esta meta', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.account')),
                ('related_categories', models.ManyToManyField(blank=True, help_text='Categorías relacionadas con esta meta', to='transactions.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meta Financiera',
                'verbose_name_plural': 'Metas Financieras',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('contribution_type', models.CharField(choices=[('manual', 'Aporte Manual'), ('automatic', 'Aporte Automático'), ('transaction_based', 'Basado en Transacción'), ('transfer', 'Transferencia')], default='manual', max_length=20)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, help_text='Notas sobre este aporte')),
                ('is_recurring', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_account', models.ForeignKey(help_text='Cuenta de donde sale el dinero', on_delete=django.db.models.deletion.CASCADE, to='accounts.account')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='goals.financialgoal')),
                ('related_transaction', models.ForeignKey(blank=True, help_text='Transacción que generó este aporte', null=True, on_delete=django.db.models.deletion.SET_NULL, to='transactions.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contribución a Meta',
                'verbose_name_plural': 'Contribuciones a Metas',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: 25% completado', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('target_date', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('icon', models.CharField(default='flag', help_text='Ícono del hito', max_length=50)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='goals.financialgoal')),
            ],
            options={
                'ordering': ['goal', 'order', 'target_date'],
                'unique_together': {('goal', 'order')},
            },
        ),
    ]
