# Generated by Django 5.2 on 2025-08-04 21:02

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GoalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ej: Fondo de Emergencia', max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('savings', 'Ahorro'), ('expense_reduction', 'Reducir Gastos'), ('income_increase', 'Aumentar Ingresos'), ('debt_payment', 'Pagar Deuda'), ('emergency_fund', 'Fondo de Emergencia'), ('investment', 'Inversión'), ('purchase', 'Compra Específica'), ('vacation', 'Vacaciones'), ('education', 'Educación'), ('retirement', 'Jubilación'), ('other', 'Otro')], max_length=20)),
                ('suggested_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Monto sugerido (puede ser calculado dinámicamente)', max_digits=15, null=True)),
                ('suggested_timeframe_months', models.PositiveIntegerField(help_text='Plazo sugerido en meses')),
                ('icon', models.CharField(default='target', max_length=50)),
                ('color', models.CharField(default='#3b82f6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('tips', models.JSONField(blank=True, default=list, help_text="Lista de consejos: ['Ahorra automáticamente', 'Revisa mensualmente']")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ej: Cuenta Corriente BCP', max_length=100)),
                ('bank_name', models.CharField(blank=True, help_text='Ej: BCP, BBVA, Interbank', max_length=100)),
                ('account_number', models.CharField(blank=True, help_text='Últimos 4 dígitos (opcional)', max_length=50)),
                ('account_type', models.CharField(choices=[('checking', 'Cuenta Corriente'), ('savings', 'Cuenta Ahorros'), ('investment', 'Cuenta Inversión'), ('credit', 'Tarjeta Crédito'), ('cash', 'Efectivo'), ('digital_wallet', 'Billetera Digital'), ('business', 'Cuenta Empresarial'), ('other', 'Otros')], default='checking', max_length=20)),
                ('initial_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('currency', models.CharField(default='PEN', help_text='PEN, USD, EUR', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('include_in_reports', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['bank_name', 'name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('icon', models.CharField(default='receipt', help_text='Nombre del ícono (lucide-react)', max_length=50)),
                ('color', models.CharField(default='#6366f1', help_text='Color hexadecimal para gráficos', max_length=7)),
                ('category_type', models.CharField(choices=[('expense', 'Gasto'), ('income', 'Ingreso'), ('both', 'Ambos')], default='expense', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='api.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FinancialGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: Ahorrar para auto nuevo', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada de la meta')),
                ('goal_type', models.CharField(choices=[('savings', 'Ahorro'), ('expense_reduction', 'Reducir Gastos'), ('income_increase', 'Aumentar Ingresos'), ('debt_payment', 'Pagar Deuda'), ('emergency_fund', 'Fondo de Emergencia'), ('investment', 'Inversión'), ('purchase', 'Compra Específica'), ('vacation', 'Vacaciones'), ('education', 'Educación'), ('retirement', 'Jubilación'), ('other', 'Otro')], default='savings', max_length=20)),
                ('target_amount', models.DecimalField(decimal_places=2, help_text='Monto objetivo a alcanzar', max_digits=15)),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monto actual ahorrado/progreso', max_digits=15)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('target_date', models.DateField(help_text='Fecha límite para completar la meta')),
                ('monthly_target', models.DecimalField(blank=True, decimal_places=2, help_text='Meta mensual recomendada para llegar al objetivo', max_digits=12, null=True)),
                ('auto_contribution', models.DecimalField(blank=True, decimal_places=2, help_text='Contribución automática mensual', max_digits=12, null=True)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('paused', 'Pausada'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('overdue', 'Vencida')], default='active', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=10)),
                ('is_public', models.BooleanField(default=False, help_text='Visible para otros usuarios')),
                ('icon', models.CharField(default='target', help_text='Ícono lucide-react', max_length=50)),
                ('color', models.CharField(default='#3b82f6', help_text='Color hexadecimal', max_length=7)),
                ('enable_reminders', models.BooleanField(default=True)),
                ('reminder_frequency', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual')], default='weekly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('associated_account', models.ForeignKey(blank=True, help_text='Cuenta donde se guarda el dinero para esta meta', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.account')),
                ('related_categories', models.ManyToManyField(blank=True, help_text='Categorías relacionadas con esta meta', to='api.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meta Financiera',
                'verbose_name_plural': 'Metas Financieras',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('transfer', 'Transfer'), ('investment', 'Investment'), ('loan', 'Loan'), ('debt', 'Debt'), ('savings', 'Savings'), ('other', 'Other')], max_length=20)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
                ('reference_number', models.CharField(blank=True, help_text='Número de referencia/voucher', max_length=100)),
                ('location', models.CharField(blank=True, help_text='Lugar de la transacción', max_length=200)),
                ('tags', models.JSONField(blank=True, default=list, help_text="Etiquetas: ['comida', 'trabajo']")),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_frequency', models.CharField(blank=True, choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('yearly', 'Anual')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category')),
                ('from_account', models.ForeignKey(help_text='Cuenta de origen (obligatorio para gastos/transferencias)', on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transactions', to='api.account')),
                ('parent_transaction', models.ForeignKey(blank=True, help_text='Transacción padre si es recurrente', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.transaction')),
                ('to_account', models.ForeignKey(blank=True, help_text='Cuenta destino (para ingresos/transferencias)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transactions', to='api.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('contribution_type', models.CharField(choices=[('manual', 'Aporte Manual'), ('automatic', 'Aporte Automático'), ('transaction_based', 'Basado en Transacción'), ('transfer', 'Transferencia')], default='manual', max_length=20)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, help_text='Notas sobre este aporte')),
                ('is_recurring', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_account', models.ForeignKey(help_text='Cuenta de donde sale el dinero', on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='api.financialgoal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_transaction', models.ForeignKey(blank=True, help_text='Transacción que generó este aporte', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.transaction')),
            ],
            options={
                'verbose_name': 'Contribución a Meta',
                'verbose_name_plural': 'Contribuciones a Metas',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('budget_exceeded', 'Presupuesto Excedido'), ('unusual_expense', 'Gasto Inusual'), ('income_drop', 'Caída de Ingresos'), ('account_low', 'Saldo Bajo'), ('category_spike', 'Pico en Categoría')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('threshold_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('actual_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_demo', models.BooleanField(default=False)),
                ('demo_expires', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CategorySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('yearly', 'Anual')], max_length=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('transaction_count', models.PositiveIntegerField(default=0)),
                ('average_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('previous_period_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('percentage_change', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('most_used_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-total_amount'],
                'unique_together': {('user', 'category', 'period_start', 'period_end', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='FinancialMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('yearly', 'Anual')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('net_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('checking_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('savings_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('investment_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('credit_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('transaction_count', models.PositiveIntegerField(default=0)),
                ('top_expense_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('top_expense_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='top_expense_periods', to='api.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-period_start'],
                'unique_together': {('user', 'period_type', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='GoalMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: 25% completado', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('target_date', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('icon', models.CharField(default='flag', help_text='Ícono del hito', max_length=50)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='api.financialgoal')),
            ],
            options={
                'ordering': ['goal', 'order', 'target_date'],
                'unique_together': {('goal', 'order')},
            },
        ),
    ]
